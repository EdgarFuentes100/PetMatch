// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetMatch.Context;

#nullable disable

namespace PetMatch.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250618203924_AddDescripion")]
    partial class AddDescripion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PetMatch.Models.Adopcion", b =>
                {
                    b.Property<int>("AdopcionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdopcionId"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("MascotaId")
                        .HasColumnType("int");

                    b.Property<int>("SolicitanteId")
                        .HasColumnType("int");

                    b.HasKey("AdopcionId");

                    b.HasIndex("MascotaId");

                    b.HasIndex("SolicitanteId");

                    b.ToTable("Adopcion");
                });

            modelBuilder.Entity("PetMatch.Models.Mascota", b =>
                {
                    b.Property<int>("MascotaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MascotaId"));

                    b.Property<int?>("EdadMeses")
                        .HasColumnType("int");

                    b.Property<string>("FotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Sexo")
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Tamano")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temperamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoMascotaId")
                        .HasColumnType("int");

                    b.HasKey("MascotaId");

                    b.HasIndex("TipoMascotaId");

                    b.ToTable("Mascotas");
                });

            modelBuilder.Entity("PetMatch.Models.Perfil", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("UsuarioId");

                    b.ToTable("Perfil");
                });

            modelBuilder.Entity("PetMatch.Models.Publicacion", b =>
                {
                    b.Property<int>("PublicacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PublicacionId"));

                    b.Property<DateTime>("FechaPublicacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Historia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MascotaId")
                        .HasColumnType("int");

                    b.Property<int>("PublicadorId")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("PublicacionId");

                    b.HasIndex("MascotaId");

                    b.HasIndex("PublicadorId");

                    b.ToTable("Publicaciones");
                });

            modelBuilder.Entity("PetMatch.Models.Rol", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolId"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RolId");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("PetMatch.Models.TipoMascota", b =>
                {
                    b.Property<int>("TipoMascotaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoMascotaId"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("TipoMascotaId");

                    b.ToTable("TiposMascota");
                });

            modelBuilder.Entity("PetMatch.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.HasKey("UsuarioId");

                    b.HasIndex("RolId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("PetMatch.Models.Adopcion", b =>
                {
                    b.HasOne("PetMatch.Models.Mascota", "Mascota")
                        .WithMany("Adopciones")
                        .HasForeignKey("MascotaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetMatch.Models.Usuario", "Solicitante")
                        .WithMany("Adopciones")
                        .HasForeignKey("SolicitanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mascota");

                    b.Navigation("Solicitante");
                });

            modelBuilder.Entity("PetMatch.Models.Mascota", b =>
                {
                    b.HasOne("PetMatch.Models.TipoMascota", "TipoMascota")
                        .WithMany("Mascotas")
                        .HasForeignKey("TipoMascotaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoMascota");
                });

            modelBuilder.Entity("PetMatch.Models.Perfil", b =>
                {
                    b.HasOne("PetMatch.Models.Usuario", "Usuario")
                        .WithOne("Perfil")
                        .HasForeignKey("PetMatch.Models.Perfil", "UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PetMatch.Models.Publicacion", b =>
                {
                    b.HasOne("PetMatch.Models.Mascota", "Mascota")
                        .WithMany("Publicaciones")
                        .HasForeignKey("MascotaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetMatch.Models.Usuario", "Publicador")
                        .WithMany("Publicaciones")
                        .HasForeignKey("PublicadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mascota");

                    b.Navigation("Publicador");
                });

            modelBuilder.Entity("PetMatch.Models.Usuario", b =>
                {
                    b.HasOne("PetMatch.Models.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("PetMatch.Models.Mascota", b =>
                {
                    b.Navigation("Adopciones");

                    b.Navigation("Publicaciones");
                });

            modelBuilder.Entity("PetMatch.Models.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("PetMatch.Models.TipoMascota", b =>
                {
                    b.Navigation("Mascotas");
                });

            modelBuilder.Entity("PetMatch.Models.Usuario", b =>
                {
                    b.Navigation("Adopciones");

                    b.Navigation("Perfil");

                    b.Navigation("Publicaciones");
                });
#pragma warning restore 612, 618
        }
    }
}
